#!/bin/bash

CONFIG_FILE_NAME=.workon.conf
PROJECT_LIST_DIR=$HOME/.workon

project_base_dir() {
  PROJECT=$1
  echo "$PROJECT_LIST_DIR/$PROJECT"
}

add_project() {
  PROJECT=$1
  PROJ_PATH=$2

  ABS_PROJ_PATH=$( cd "$PROJ_PATH" && pwd )
  echo "Adding $PROJECT as $ABS_PROJ_PATH"
  ln -s $ABS_PROJ_PATH $PROJECT_LIST_DIR/$PROJECT

  edit_project $1
}

edit_project() {
  if [[ "$EDITOR" == "" ]]; then
    echo "No editor defined. Please set \$EDITOR"
    exit
  fi

  PROJECT=$1
  BASE_DIR=$(project_base_dir $PROJECT)
  CONFIG_FILE="$BASE_DIR/$CONFIG_FILE_NAME"

  $EDITOR $CONFIG_FILE
}

list_projects() {
  ls -1 $PROJECT_LIST_DIR
}

run_project() {
  export CURRENT_PROJECT=$1

  PROJECT_BASE_DIR="$PROJECT_LIST_DIR/$CURRENT_PROJECT"
  
  if [[ -d "$PROJECT_BASE_DIR" ]]; then
    cd $PROJECT_BASE_DIR
    PROJECT_ROOT_DIR=$PROJECT_BASE_DIR

    if [[ -f "$CONFIG_FILE_NAME" ]]; then
      source $CONFIG_FILE_NAME
    else
      echo "No configuration file available. Create $PROJECT_BASE_DIR/$CONFIG_FILE_NAME if configuration is needed."
    fi

    cd $PROJECT_ROOT_DIR
    exec $SHELL
  fi
}

check_for_config() {
  if [ ! -d $PROJECT_LIST_DIR ]; then
    echo "No projects configured! Add a project before use."
    exit
  fi
}

usage() {
  cat <<EOF
Usage:  $0 add <project> <project_path>
	     Create a project entry named <project> and edit the project script
             in <project_path>
        $0 edit <project>
             Edit the project script in <project_path>
        $0 list
             List projects defined in $PROJECT_LIST_DIR
        $0 <project>
             Start a shell in <project>'s defined path"
EOF
}

if [[ "$1" == "add" ]]; then
  add_project $2 $3
elif [[ "$1" == "edit" ]]; then
  check_for_config
  edit_project $2
elif [[ "$1" == "list" ]]; then
  check_for_config
  list_projects
elif [[ "$1" == "help" ]]; then
  usage
else
  check_for_config
  run_project $1
fi
